name: macOS app build (PyInstaller) with ffmpeg 8

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write

jobs:
  ffmpeg:
    name: Fetch ffmpeg v8 (${{ matrix.runner }})
    strategy:
      matrix:
        runner: [ macos-13, macos-14 ]  # x86_64 and arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install ffmpeg via Homebrew
        shell: bash
        run: |
          set -euxo pipefail
          brew update
          brew install ffmpeg
          ffmpeg -version | head -n1
          # Ensure major version 8
          if ! ffmpeg -version | head -n1 | grep -q "ffmpeg version 8"; then
            echo "ffmpeg is not major version 8" >&2
            exit 1
          fi
      - name: Upload ffmpeg binary artifact
        shell: bash
        run: |
          set -euxo pipefail
          arch=$(uname -m)
          bin=$(command -v ffmpeg)
          mkdir -p out
          cp "$bin" out/ffmpeg
          echo "arch=$arch"
        # Use upload-artifact v4
      - uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ runner.os }}-${{ matrix.runner }}
          path: out/ffmpeg
          if-no-files-found: error

  build:
    needs: ffmpeg
    runs-on: macos-13  # build the app on Intel
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt pyinstaller==6.10.0

      - name: Download ffmpeg arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-macOS-macos-14
          path: ffmpeg-arm64
      - name: Download ffmpeg x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-macOS-macos-13
          path: ffmpeg-x86_64

      - name: Place ffmpeg binaries into assets tree
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p assets/ffmpeg/mac/arm64 assets/ffmpeg/mac/x86_64
          cp ffmpeg-arm64/ffmpeg assets/ffmpeg/mac/arm64/ffmpeg
          cp ffmpeg-x86_64/ffmpeg assets/ffmpeg/mac/x86_64/ffmpeg
          chmod +x assets/ffmpeg/mac/arm64/ffmpeg assets/ffmpeg/mac/x86_64/ffmpeg

      - name: Build app
        run: |
          rm -rf build dist || true
          pyinstaller -y --clean pyinstaller.spec

      - name: Zip artifacts
        run: |
          cd dist
          zip -r "DatasetCutter-macOS-app.zip" "Dataset Cutter.app"
          zip -r "DatasetCutter-macOS-cli.zip" "DatasetCutter"

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DatasetCutter-macOS-with-ffmpeg8
          path: |
            dist/DatasetCutter/**
            dist/Dataset Cutter.app/**
          if-no-files-found: error

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/DatasetCutter-macOS-app.zip
            dist/DatasetCutter-macOS-cli.zip
